import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, label } from '@roots/bud-framework/extension/decorators';
/**
 * resolve-url-loader configuration
 */
let BudResolveUrl = class BudResolveUrl extends Extension {
    /**
     * {@link Extension.register}
     */
    async register({ build, hooks }) {
        /** Source loader */
        const loader = await this.resolve(`resolve-url-loader`, import.meta.url);
        if (!loader)
            return this.logger.error(`resolve-url-loader not found`);
        /** Set loader alias */
        hooks.on(`build.resolveLoader.alias`, (aliases = {}) => ({
            ...aliases,
            [`resolve-url-loader`]: loader,
        }));
        /** Setup rule */
        build.setLoader(`resolve-url`, loader).setItem(`resolve-url`, {
            loader: `resolve-url`,
            options: ({ path }) => ({ root: path(`@src`), sourceMap: true }),
        });
    }
};
__decorate([
    bind
], BudResolveUrl.prototype, "register", null);
BudResolveUrl = __decorate([
    label(`@roots/bud-sass/resolve-url`)
], BudResolveUrl);
export { BudResolveUrl };
